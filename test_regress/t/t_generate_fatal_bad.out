%Warning-USERFATAL: "boom"
                    ... Use "/* verilator lint_off USERFATAL */" and lint_on around source to disable this message.
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h0
                                   : ... In instance t.genloop[0].foo_inst
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h1
                                   : ... In instance t.genloop[1].foo_inst
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h2
                                   : ... In instance t.gen_l1[2].gen_l2[0].foo_inst2
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h4
                                   : ... In instance t.gen_l1[2].gen_l2[1].foo_inst2
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h3
                                   : ... In instance t.gen_l1[3].gen_l2[0].foo_inst2
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h5
                                   : ... In instance t.gen_l1[3].gen_l2[1].foo_inst2
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h6
                                   : ... In instance t.cond_true.foo_inst3
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h7
                                   : ... In instance t.genblk1.foo_inst4
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h8
                                   : ... In instance t.nested_loop[8].foo2_inst.foo2_loop[0].foo_in_foo2_inst
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'h9
                                   : ... In instance t.nested_loop[8].foo2_inst.foo2_loop[1].foo_in_foo2_inst
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'ha
                                   : ... In instance t.nested_loop[10].foo2_inst.foo2_loop[0].foo_in_foo2_inst
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: t/t_generate_fatal_bad.v:12: Expecting expression to be constant, but can't determine constant for FUNCREF 'get_baz'
        t/t_generate_fatal_bad.v:8: ... Location of non-constant STOP: $stop executed during function constification; maybe indicates assertion firing
        t/t_generate_fatal_bad.v:12: ... Called from get_baz() with parameters:
           bar = 32'hb
                                   : ... In instance t.nested_loop[10].foo2_inst.foo2_loop[1].foo_in_foo2_inst
   localparam integer BAZ = get_baz(BAR);
                            ^~~~~~~
%Error: Exiting due to
